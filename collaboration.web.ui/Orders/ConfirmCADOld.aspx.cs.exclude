using System;
using System.Collections.Generic;
using System.Linq;
using Collaboration.Business.Entities;
using Collaboration.Business.Components;
using Collaboration.Web.UI.Utilities;

namespace Collaboration.Web.UI.Orders
{
    public partial class ConfirmCADOld : System.Web.UI.Page
    {
        static OrderDetails_Result orderDetails;
        public int OrderID;
        public int CADID;
       
        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {
                int.TryParse(Request.QueryString[Common.EntityAttributes.ORDERID].DecryptMAC(Resource.EncryptPassphrase), out OrderID);
                int.TryParse(Request.QueryString[Common.EntityAttributes.CADID].DecryptMAC(Resource.EncryptPassphrase), out CADID);
            }
            catch (Exception ex)
            {
                Response.Redirect("~/AccessDenied.html");
            }
           

            if (!IsPostBack)
                GetOrderDetails();
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderID"></param>
        private void GetOrderDetails()
        {
           
            OrdersCAD CAD = new OrderManager().GetOrderCADs(OrderID, CADID).SingleOrDefault();
            orderDetails = new OrderManager().GetOrderDetails(OrderID, 0);
            if (orderDetails == null)
                Response.Redirect("~/AccessDenied.html");
            else if (CAD.IsApproved == null)          
                CompareCAD.SetValues(orderDetails, CADID);           
            else
            {
                CompareCAD.SetValues(orderDetails, CADID);           
                MessageUtility.ShowMessage(dvMessage, ltMessage, Convert.ToInt16(Common.MessageTypes.Error), Resource.InfoResponseRegistered);
                btnApproveCAD.Visible = false;
                btnChangeRequest.Visible = false;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void btnApprove_Click(object sender, EventArgs e)
        {
            Order order=new Order();
            OrdersCAD orderCAD = new OrdersCAD();           
            orderCAD.CADID = CADID;
            orderCAD.ChangeInstructions ="";
            orderCAD.IsApproved =true;
            order.OrderID = orderDetails.OrderID;
            order.OrderStatusID = Convert.ToInt32(Resource.DB_Status_CADConfirmed);
            order.UpdateCADInfo = true;
            order.OrdersCADs.Add(orderCAD);
            if (new OrderManager().ChangeOrderStatus(order))
            {
                MessageUtility.ShowMessage(dvMessage, ltMessage, Convert.ToInt16(Common.MessageTypes.Success), Resource.Info_ResponseSent);
                string errorMessage;
                IEnumerable<OrderParticipants_Result> users = new OrderManager().GetOrderParticipants(order.OrderID);
                string toList = users.Select(s => s.EMail).Aggregate((current, next) => current + ", " + next);
                if (!MailUtility.SendCADResposeMail(orderDetails.TMEmail, "", Convert.ToString(Common.MailType.CADResponse), orderDetails.TMUserName, orderDetails.SerialNumber, "Yes", out errorMessage))
                    MessageUtility.ShowMessage(dvMessage, ltMessage, Convert.ToInt16(Common.MessageTypes.Error), Resource.Err_General);
                btnApproveCAD.Visible = false;
                btnChangeRequest.Visible = false;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void btnChangeRequest_Click(object sender, EventArgs e)
        {
            mpAddCR.Show();
            updAdd.Update();
        }
         /// <summary>
        /// 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void btnSend_Click(object sender, EventArgs e)
        {
            mpAddCR.Show();
            Order order = new Order();
            OrdersCAD orderCAD = new OrdersCAD();
            orderCAD.CADID = CADID;
            orderCAD.ChangeInstructions = txtChangeInstructions.Value;
            orderCAD.IsApproved = false;
            order.OrderID = orderDetails.OrderID;
            order.OrderStatusID = Convert.ToInt32(Resource.DB_Status_ChangeRequest);
            order.UpdateCADInfo = true;
            order.OrdersCADs.Add(orderCAD);
            if (new OrderManager().ChangeOrderStatus(order))
            {
                MessageUtility.ShowMessage(dvMessage, ltMessage, Convert.ToInt16(Common.MessageTypes.Success), Resource.Info_ResponseSent);
                btnApproveCAD.Visible = false;
                btnChangeRequest.Visible = false;
                string errorMessage;
                IEnumerable<OrderParticipants_Result> users = new OrderManager().GetOrderParticipants(order.OrderID);
                string toList = users.Select(s => s.EMail).Aggregate((current, next) => current + ", " + next);
                if (!MailUtility.SendCADResposeMail(orderDetails.TMEmail, "", Convert.ToString(Common.MailType.CADResponse), orderDetails.TMUserName,orderDetails.SerialNumber, "No" ,out errorMessage))
                    MessageUtility.ShowMessage(dvMessage, ltMessage, Convert.ToInt16(Common.MessageTypes.Error), Resource.Err_General);
                mpAddCR.Hide();
                updAdd.Update();
            }
        }        
    }
}