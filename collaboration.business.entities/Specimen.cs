//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Collaboration.Business.Entities
{
    public partial class Specimen
    {
        #region Primitive Properties
    
        public virtual int SpecimenID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> OrderID
        {
            get { return _orderID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_orderID != value)
                    {
                        if (Order != null && Order.OrderID != value)
                        {
                            Order = null;
                        }
                        _orderID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _orderID;
    
        public virtual Nullable<int> MessageID
        {
            get { return _messageID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_messageID != value)
                    {
                        if (Message != null && Message.MessageID != value)
                        {
                            Message = null;
                        }
                        _messageID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _messageID;
    
        public virtual string ImageLocationURL
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> CreateDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> ModifyDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Message Message
        {
            get { return _message; }
            set
            {
                if (!ReferenceEquals(_message, value))
                {
                    var previousValue = _message;
                    _message = value;
                    FixupMessage(previousValue);
                }
            }
        }
        private Message _message;
    
        public virtual Order Order
        {
            get { return _order; }
            set
            {
                if (!ReferenceEquals(_order, value))
                {
                    var previousValue = _order;
                    _order = value;
                    FixupOrder(previousValue);
                }
            }
        }
        private Order _order;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupMessage(Message previousValue)
        {
            if (previousValue != null && previousValue.Specimens.Contains(this))
            {
                previousValue.Specimens.Remove(this);
            }
    
            if (Message != null)
            {
                if (!Message.Specimens.Contains(this))
                {
                    Message.Specimens.Add(this);
                }
                if (MessageID != Message.MessageID)
                {
                    MessageID = Message.MessageID;
                }
            }
            else if (!_settingFK)
            {
                MessageID = null;
            }
        }
    
        private void FixupOrder(Order previousValue)
        {
            if (previousValue != null && previousValue.Specimens.Contains(this))
            {
                previousValue.Specimens.Remove(this);
            }
    
            if (Order != null)
            {
                if (!Order.Specimens.Contains(this))
                {
                    Order.Specimens.Add(this);
                }
                if (OrderID != Order.OrderID)
                {
                    OrderID = Order.OrderID;
                }
            }
            else if (!_settingFK)
            {
                OrderID = null;
            }
        }

        #endregion
    }
}
